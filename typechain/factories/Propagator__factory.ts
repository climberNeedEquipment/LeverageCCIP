/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Propagator, PropagatorInterface } from "../Propagator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLeverager",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lendingProtocol",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "ClosePositionMsgSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "i_link",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leverager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage[]",
        name: "messages",
        type: "tuple[]",
      },
      {
        internalType: "uint64[]",
        name: "destinationChainSelectors",
        type: "uint64[]",
      },
    ],
    name: "propagate",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "messageIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001f1438038062001f1483398181016040528101906200003791906200033a565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620003a7565b60405180910390fd5b620000be816200020c60201b60201c565b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505060c05173ffffffffffffffffffffffffffffffffffffffff1663095ea7b360a0517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401620001bc929190620003df565b6020604051808303816000875af1158015620001dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000202919062000449565b505050506200047b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030282620002d5565b9050919050565b6200031481620002f5565b81146200032057600080fd5b50565b600081519050620003348162000309565b92915050565b600080600060608486031215620003565762000355620002d0565b5b6000620003668682870162000323565b9350506020620003798682870162000323565b92505060406200038c8682870162000323565b9150509250925092565b620003a181620002f5565b82525050565b6000602082019050620003be600083018462000396565b92915050565b6000819050919050565b620003d981620003c4565b82525050565b6000604082019050620003f6600083018562000396565b620004056020830184620003ce565b9392505050565b60008115159050919050565b62000423816200040c565b81146200042f57600080fd5b50565b600081519050620004438162000418565b92915050565b600060208284031215620004625762000461620002d0565b5b6000620004728482850162000432565b91505092915050565b60805160a05160c051611a46620004ce600039600061045b015260008181610423015281816104aa015281816107d4015281816108ab01526109510152600081816102cf015261054b0152611a466000f3fe6080604052600436106100955760003560e01c80638da5cb5b116100595780638da5cb5b14610174578063a48a90581461019f578063db3e3461146101dc578063f2fde38b14610207578063f3fef3a3146102305761009c565b806301e33667146100a15780633626454d146100ca578063581bdd1614610107578063715018a6146101325780637d253aff146101495761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610bec565b610259565b005b3480156100d657600080fd5b506100f160048036038101906100ec9190611187565b6102cb565b6040516100fe91906112c7565b60405180910390f35b34801561011357600080fd5b5061011c610421565b60405161012991906112f8565b60405180910390f35b34801561013e57600080fd5b50610147610445565b005b34801561015557600080fd5b5061015e610459565b60405161016b91906112f8565b60405180910390f35b34801561018057600080fd5b5061018961047d565b60405161019691906112f8565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c19190611313565b6104a6565b6040516101d3919061135b565b60405180910390f35b3480156101e857600080fd5b506101f1610549565b6040516101fe91906112f8565b60405180910390f35b34801561021357600080fd5b5061022e60048036038101906102299190611376565b61056d565b005b34801561023c57600080fd5b50610257600480360381019061025291906113a3565b6105f3565b005b6102616106c4565b600061028c308473ffffffffffffffffffffffffffffffffffffffff1661074b90919063ffffffff16565b90508082111561029a578091505b6102c584838573ffffffffffffffffffffffffffffffffffffffff166107809092919063ffffffff16565b50505050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610352576040517fb32d8c6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825167ffffffffffffffff81111561036d5761036c610c55565b5b60405190808252806020026020018201604052801561039b5781602001602082028036833780820191505090505b50905060005b835181101561041a576103e88482815181106103c0576103bf6113e3565b5b60200260200101518483815181106103db576103da6113e3565b5b60200260200101516107cf565b8282815181106103fb576103fa6113e3565b5b602002602001018181525050808061041290611441565b9150506103a1565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61044d6106c4565b6104576000610a78565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a48a9058836040518263ffffffff1660e01b81526004016105019190611498565b602060405180830381865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054291906114df565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105756106c4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105de91906112f8565b60405180910390fd5b6105f081610a78565b50565b6105fb6106c4565b60004790508082111561060c578091505b60008373ffffffffffffffffffffffffffffffffffffffff16836040516106329061153d565b60006040518083038185875af1925050503d806000811461066f576040519150601f19603f3d011682016040523d82523d6000602084013e610674565b606091505b50509050806106be573384846040517f9d11f5630000000000000000000000000000000000000000000000000000000081526004016106b593929190611561565b60405180910390fd5b50505050565b6106cc610b3c565b73ffffffffffffffffffffffffffffffffffffffff166106ea61047d565b73ffffffffffffffffffffffffffffffffffffffff16146107495761070d610b3c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161074091906112f8565b60405180910390fd5b565b6000816014526f70a0823100000000000000000000000060005260208060246010865afa601f3d111660205102905092915050565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166107c5576390b8ec186000526004601cfd5b6000603452505050565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded84866040518363ffffffff1660e01b815260040161082d92919061179e565b602060405180830381865afa15801561084a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e91906117e3565b905060008073ffffffffffffffffffffffffffffffffffffffff16856060015173ffffffffffffffffffffffffffffffffffffffff160361094f577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f98386886040518463ffffffff1660e01b815260040161090592919061179e565b60206040518083038185885af1158015610923573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610948919061183c565b90506109f0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f985876040518363ffffffff1660e01b81526004016109aa92919061179e565b6020604051808303816000875af11580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ed919061183c565b90505b60008560200151806020019051810190610a0a9190611950565b5050505090508073ffffffffffffffffffffffffffffffffffffffff168567ffffffffffffffff16837fbb84df71a0e51d82ff2e818a77257c7a05d8ea1bbcf265b377fd30d8e9e790213087604051610a649291906119e7565b60405180910390a481935050505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8382610b58565b9050919050565b610b9381610b78565b8114610b9e57600080fd5b50565b600081359050610bb081610b8a565b92915050565b6000819050919050565b610bc981610bb6565b8114610bd457600080fd5b50565b600081359050610be681610bc0565b92915050565b600080600060608486031215610c0557610c04610b4e565b5b6000610c1386828701610ba1565b9350506020610c2486828701610ba1565b9250506040610c3586828701610bd7565b9150509250925092565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c8d82610c44565b810181811067ffffffffffffffff82111715610cac57610cab610c55565b5b80604052505050565b6000610cbf610b44565b9050610ccb8282610c84565b919050565b600067ffffffffffffffff821115610ceb57610cea610c55565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610d2b57610d2a610c55565b5b610d3482610c44565b9050602081019050919050565b82818337600083830152505050565b6000610d63610d5e84610d10565b610cb5565b905082815260208101848484011115610d7f57610d7e610d0b565b5b610d8a848285610d41565b509392505050565b600082601f830112610da757610da6610c3f565b5b8135610db7848260208601610d50565b91505092915050565b600067ffffffffffffffff821115610ddb57610dda610c55565b5b602082029050602081019050919050565b600060408284031215610e0257610e01610d01565b5b610e0c6040610cb5565b90506000610e1c84828501610ba1565b6000830152506020610e3084828501610bd7565b60208301525092915050565b6000610e4f610e4a84610dc0565b610cb5565b90508083825260208201905060408402830185811115610e7257610e71610cfc565b5b835b81811015610e9b5780610e878882610dec565b845260208401935050604081019050610e74565b5050509392505050565b600082601f830112610eba57610eb9610c3f565b5b8135610eca848260208601610e3c565b91505092915050565b600060a08284031215610ee957610ee8610d01565b5b610ef360a0610cb5565b9050600082013567ffffffffffffffff811115610f1357610f12610d06565b5b610f1f84828501610d92565b600083015250602082013567ffffffffffffffff811115610f4357610f42610d06565b5b610f4f84828501610d92565b602083015250604082013567ffffffffffffffff811115610f7357610f72610d06565b5b610f7f84828501610ea5565b6040830152506060610f9384828501610ba1565b606083015250608082013567ffffffffffffffff811115610fb757610fb6610d06565b5b610fc384828501610d92565b60808301525092915050565b6000610fe2610fdd84610cd0565b610cb5565b9050808382526020820190506020840283018581111561100557611004610cfc565b5b835b8181101561104c57803567ffffffffffffffff81111561102a57611029610c3f565b5b8086016110378982610ed3565b85526020850194505050602081019050611007565b5050509392505050565b600082601f83011261106b5761106a610c3f565b5b813561107b848260208601610fcf565b91505092915050565b600067ffffffffffffffff82111561109f5761109e610c55565b5b602082029050602081019050919050565b600067ffffffffffffffff82169050919050565b6110cd816110b0565b81146110d857600080fd5b50565b6000813590506110ea816110c4565b92915050565b60006111036110fe84611084565b610cb5565b9050808382526020820190506020840283018581111561112657611125610cfc565b5b835b8181101561114f578061113b88826110db565b845260208401935050602081019050611128565b5050509392505050565b600082601f83011261116e5761116d610c3f565b5b813561117e8482602086016110f0565b91505092915050565b6000806040838503121561119e5761119d610b4e565b5b600083013567ffffffffffffffff8111156111bc576111bb610b53565b5b6111c885828601611056565b925050602083013567ffffffffffffffff8111156111e9576111e8610b53565b5b6111f585828601611159565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61123e8161122b565b82525050565b60006112508383611235565b60208301905092915050565b6000602082019050919050565b6000611274826111ff565b61127e818561120a565b93506112898361121b565b8060005b838110156112ba5781516112a18882611244565b97506112ac8361125c565b92505060018101905061128d565b5085935050505092915050565b600060208201905081810360008301526112e18184611269565b905092915050565b6112f281610b78565b82525050565b600060208201905061130d60008301846112e9565b92915050565b60006020828403121561132957611328610b4e565b5b6000611337848285016110db565b91505092915050565b60008115159050919050565b61135581611340565b82525050565b6000602082019050611370600083018461134c565b92915050565b60006020828403121561138c5761138b610b4e565b5b600061139a84828501610ba1565b91505092915050565b600080604083850312156113ba576113b9610b4e565b5b60006113c885828601610ba1565b92505060206113d985828601610bd7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061144c82610bb6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361147e5761147d611412565b5b600182019050919050565b611492816110b0565b82525050565b60006020820190506114ad6000830184611489565b92915050565b6114bc81611340565b81146114c757600080fd5b50565b6000815190506114d9816114b3565b92915050565b6000602082840312156114f5576114f4610b4e565b5b6000611503848285016114ca565b91505092915050565b600081905092915050565b50565b600061152760008361150c565b915061153282611517565b600082019050919050565b60006115488261151a565b9150819050919050565b61155b81610bb6565b82525050565b600060608201905061157660008301866112e9565b61158360208301856112e9565b6115906040830184611552565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115d25780820151818401526020810190506115b7565b60008484015250505050565b60006115e982611598565b6115f381856115a3565b93506116038185602086016115b4565b61160c81610c44565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61164c81610b78565b82525050565b61165b81610bb6565b82525050565b6040820160008201516116776000850182611643565b50602082015161168a6020850182611652565b50505050565b600061169c8383611661565b60408301905092915050565b6000602082019050919050565b60006116c082611617565b6116ca8185611622565b93506116d583611633565b8060005b838110156117065781516116ed8882611690565b97506116f8836116a8565b9250506001810190506116d9565b5085935050505092915050565b600060a083016000830151848203600086015261173082826115de565b9150506020830151848203602086015261174a82826115de565b9150506040830151848203604086015261176482826116b5565b91505060608301516117796060860182611643565b506080830151848203608086015261179182826115de565b9150508091505092915050565b60006040820190506117b36000830185611489565b81810360208301526117c58184611713565b90509392505050565b6000815190506117dd81610bc0565b92915050565b6000602082840312156117f9576117f8610b4e565b5b6000611807848285016117ce565b91505092915050565b6118198161122b565b811461182457600080fd5b50565b60008151905061183681611810565b92915050565b60006020828403121561185257611851610b4e565b5b600061186084828501611827565b91505092915050565b600061187482610b58565b9050919050565b61188481611869565b811461188f57600080fd5b50565b6000815190506118a18161187b565b92915050565b600060ff82169050919050565b6118bd816118a7565b81146118c857600080fd5b50565b6000815190506118da816118b4565b92915050565b60006118f36118ee84610d10565b610cb5565b90508281526020810184848401111561190f5761190e610d0b565b5b61191a8482856115b4565b509392505050565b600082601f83011261193757611936610c3f565b5b81516119478482602086016118e0565b91505092915050565b600080600080600060a0868803121561196c5761196b610b4e565b5b600061197a88828901611892565b955050602061198b88828901611892565b945050604061199c88828901611892565b93505060606119ad888289016118cb565b925050608086015167ffffffffffffffff8111156119ce576119cd610b53565b5b6119da88828901611922565b9150509295509295909350565b60006040820190506119fc60008301856112e9565b611a096020830184611552565b939250505056fea26469706673582212207260749d28c6f63f821317490a82201992ebdd17bc72b5761627e9b20d1ae9b664736f6c63430008140033";

type PropagatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PropagatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Propagator__factory extends ContractFactory {
  constructor(...args: PropagatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, link, owner, overrides || {});
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, owner, overrides || {}) as Promise<
      Propagator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Propagator__factory {
    return super.connect(runner) as Propagator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PropagatorInterface {
    return new Interface(_abi) as PropagatorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Propagator {
    return new Contract(address, _abi, runner) as unknown as Propagator;
  }
}
