/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IScaledBalanceToken,
  IScaledBalanceTokenInterface,
} from "../../../../contracts/interfaces/IAave.sol/IScaledBalanceToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getScaledUserBalanceAndSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaledTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IScaledBalanceToken__factory {
  static readonly abi = _abi;
  static createInterface(): IScaledBalanceTokenInterface {
    return new Interface(_abi) as IScaledBalanceTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IScaledBalanceToken {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IScaledBalanceToken;
  }
}
