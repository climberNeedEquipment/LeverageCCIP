/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICompoundV2Viewer,
  ICompoundV2ViewerInterface,
} from "../../../interfaces/ICompound.sol/ICompoundV2Viewer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "compV2PoolParams",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "mintPaused",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "borrowPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
        ],
        internalType: "struct ICompoundV2Viewer.CompV2PoolParamsResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "compV2PoolState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accrualNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exchangeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPerBlock",
            type: "bool",
          },
        ],
        internalType: "struct ICompoundV2Viewer.CompV2PoolStateResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICompoundV2Viewer__factory {
  static readonly abi = _abi;
  static createInterface(): ICompoundV2ViewerInterface {
    return new Interface(_abi) as ICompoundV2ViewerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICompoundV2Viewer {
    return new Contract(address, _abi, runner) as unknown as ICompoundV2Viewer;
  }
}
